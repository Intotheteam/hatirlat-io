spring.config.import=classpath:security-routes.properties
server.port=8080

# Database Configuration  
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# JPA Configuration  
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# H2 Console - only for development environments
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=false

# OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Scalar Configuration
springdoc.scalar.path=/scalar

# JWT Configuration
# Secret key should be externalized in production environment using environment variables
application.security.jwt.secret-key=${JWT_SECRET_KEY:404E634A664D6A416E445267556B58703273476B3576245367566B596D327245}
application.security.jwt.expiration=${JWT_EXPIRATION:86400000}
application.security.jwt.refresh-token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMIN

# Server Configuration
server.error.include-message=always
server.error.include-binding-errors=always

# Circular References should be avoided - this is a security risk
# spring.main.allow-circular-references=true

# Logging Configuration
logging.level.com.hatirlat.backend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.root=INFO
logging.level.io.github.resilience4j=INFO

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Resilience4j examples
resilience4j.circuitbreaker.instances.default.register-health-indicator=true
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.default.sliding-window-size=20
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=5
resilience4j.circuitbreaker.instances.default.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.timelimiter.instances.default.timeout-duration=2s

resilience4j.retry.instances.default.max-attempts=3
resilience4j.retry.instances.default.wait-duration=200ms
resilience4j.retry.instances.default.retry-exceptions=java.io.IOException,org.springframework.web.client.ResourceAccessException

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Free plan limits (defaults and per-rule overrides)
free-limit.default-max-requests=10
free-limit.default-per-seconds=60
# Example override by key (use controller method signature or custom key from annotation)
#free-limit.rules.createReminder.max-requests=5
#free-limit.rules.createReminder.per-seconds=60
